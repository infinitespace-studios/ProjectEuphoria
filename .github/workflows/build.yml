# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: build

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: build-${{ matrix.os }} ${{ matrix.artifact }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            rids: -r win-x64
            artifact: publish-win-x64
          - os: macos-latest
            rids: -r osx-arm64
            artifact: publish-osx-universal
          - os: ubuntu-latest
            rids: -r linux-x64
            artifact: publish-linux-x64
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Setup for MonoGame
      uses: infinitespace-studios/monogame-actions/install-wine@v1.0
    - name: Restore dependencies
      run: dotnet restore
    - name: Restore tools
      run: dotnet tool restore
    - name: Build
      run: |
        dotnet publish src/Platforms/DesktopGL/Euphoria.DesktopGL.csproj -c Release ${{ matrix.rids }}
      shell: bash
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: ./${{ matrix.artifact }}/*.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: List artifacts
        run: ls -R artifacts
        shell: bash
          
      - name: Extract tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        shell: bash
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.tag.outputs.tag }}
          tag_name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          files: artifacts/**/*.zip
          generate_release_notes: true

  publish:
    name: Publish to Itch.io
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Extract version name from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Setup for MonoGame
        uses: infinitespace-studios/monogame-actions/publish-itchio@v1.0
        with:
          channel: 'ubuntu' 
          file: 'artifacts/**/*.zip'
          version: ${{ steps.version.outputs.version }}
          ITCHIO_USER: ${{ secrets.ITCHIO_USER }}
          ITCHIO_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCHIO_TOKEN: ${{ secrets.ITCHIO_TOKEN }}